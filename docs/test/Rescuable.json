{
    "methods": {
        "owner()": {
            "stateMutability": "view",
            "code": "function owner() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address",
                    "description": "the address of the owner"
                }
            },
            "details": "Tells the address of the owner"
        },
        "rescueERC20(address,address,uint256)": {
            "stateMutability": "nonpayable",
            "code": "function rescueERC20(contract IERC20 tokenContract, address to, uint256 amount) external nonpayable",
            "inputs": {
                "tokenContract": {
                    "type": "contract IERC20",
                    "description": "ERC20 token contract address"
                },
                "to": {
                    "type": "address",
                    "description": "Recipient address"
                },
                "amount": {
                    "type": "uint256",
                    "description": "Amount to withdraw"
                }
            },
            "outputs": {},
            "notice": "Rescue ERC20 tokens locked up in this contract."
        },
        "rescuer()": {
            "stateMutability": "view",
            "code": "function rescuer() external view returns (address)",
            "inputs": {},
            "outputs": {
                "_0": {
                    "type": "address",
                    "description": "Rescuer's address"
                }
            },
            "notice": "Returns current rescuer"
        },
        "transferOwnership(address)": {
            "stateMutability": "nonpayable",
            "code": "function transferOwnership(address newOwner) external nonpayable",
            "inputs": {
                "newOwner": {
                    "type": "address",
                    "description": "The address to transfer ownership to."
                }
            },
            "outputs": {},
            "details": "Allows the current owner to transfer control of the contract to a newOwner."
        },
        "updateRescuer(address)": {
            "stateMutability": "nonpayable",
            "code": "function updateRescuer(address newRescuer) external nonpayable",
            "inputs": {
                "newRescuer": {
                    "type": "address",
                    "description": "New rescuer's address"
                }
            },
            "outputs": {},
            "notice": "Assign the rescuer role to a given address."
        }
    },
    "events": {
        "OwnershipTransferred": {
            "code": "event OwnershipTransferred(address previousOwner, address newOwner)",
            "inputs": {
                "previousOwner": {
                    "type": "address",
                    "indexed": false
                },
                "newOwner": {
                    "type": "address",
                    "indexed": false
                }
            }
        },
        "RescuerChanged": {
            "code": "event RescuerChanged(address indexed newRescuer)",
            "inputs": {
                "newRescuer": {
                    "type": "address",
                    "indexed": true
                }
            }
        }
    },
    "errors": {},
    "path": "/test",
    "name": "Rescuable"
}