{
  "address": "0xc62D8d274Bf1542449F540f7D0aC03C4BdBb5FF5",
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyNotAdmin",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotRegisteredPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotValidEarlyAccessProportion",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotValidGalaxyPoolProportion",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZeroOfferedRate",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "createdBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registeredBy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "name": "PoolRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPoolImplementation",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPoolImplementation",
          "type": "address"
        }
      ],
      "name": "UpdatePoolImplementation",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENTAGE_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPoolsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[2]",
          "name": "addrs",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[13]",
          "name": "uints",
          "type": "uint256[13]"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getCreatedPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getCreatedPoolsByToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getCreatedPoolsLengthByToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "getRegisteredPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collaborator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRegisteredPoolsByToken",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collaborator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getRegisteredPoolsLengthByToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "grantAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "hasAdminRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[2]",
          "name": "addrs",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[13]",
          "name": "uints",
          "type": "uint256[13]"
        }
      ],
      "name": "hashPoolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolImplementationAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolImplementationAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "collaborator",
          "type": "address"
        },
        {
          "internalType": "address[2]",
          "name": "addrs",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[13]",
          "name": "uints",
          "type": "uint256[13]"
        }
      ],
      "name": "registerPoolAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "registerPools",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "revokeAdminRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_poolImplementationAddress",
          "type": "address"
        }
      ],
      "name": "setPoolImplementation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_testFactory",
          "type": "uint256"
        }
      ],
      "name": "setTestFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testFactory",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xc95707e0dabede66e55d35c6085c920aa785285cada9f61343891abda634a713",
  "receipt": {
    "to": null,
    "from": "0x9460b481366b7462af4f7991d430e5eB97FAAEB5",
    "contractAddress": "0xc62D8d274Bf1542449F540f7D0aC03C4BdBb5FF5",
    "transactionIndex": 174,
    "gasUsed": "1352188",
    "logsBloom": "0x
    "blockHash": "0x74a481ecbc860365f3e607c9affe98942f62533e5855e1f29f84801ac8f05f6e",
    "transactionHash": "0xc95707e0dabede66e55d35c6085c920aa785285cada9f61343891abda634a713",
    "logs": [],
    "blockNumber": 8096944,
    "cumulativeGasUsed": "27441343",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "a3ef9553f61297c9a145e4e52335e76e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyNotAdmin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRegisteredPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidEarlyAccessProportion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotValidGalaxyPoolProportion\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroOfferedRate\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"createdBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registeredBy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPoolImplementation\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPoolImplementation\",\"type\":\"address\"}],\"name\":\"UpdatePoolImplementation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTAGE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPoolsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"addrs\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[13]\",\"name\":\"uints\",\"type\":\"uint256[13]\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getCreatedPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCreatedPoolsByToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getCreatedPoolsLengthByToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getRegisteredPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collaborator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRegisteredPoolsByToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collaborator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getRegisteredPoolsLengthByToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"grantAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"hasAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"addrs\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[13]\",\"name\":\"uints\",\"type\":\"uint256[13]\"}],\"name\":\"hashPoolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolImplementationAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolImplementationAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collaborator\",\"type\":\"address\"},{\"internalType\":\"address[2]\",\"name\":\"addrs\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[13]\",\"name\":\"uints\",\"type\":\"uint256[13]\"}],\"name\":\"registerPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"registerPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"revokeAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_poolImplementationAddress\",\"type\":\"address\"}],\"name\":\"setPoolImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_testFactory\",\"type\":\"uint256\"}],\"name\":\"setTestFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFactory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allPoolsLength()\":{\"returns\":{\"_0\":\"Return number of created pools\"}},\"getCreatedPoolsByToken(address,address)\":{\"details\":\"User can retrieve their created pool by address of tokens\",\"params\":{\"_creator\":\"Address of created pool user\",\"_token\":\"Address of token want to query\"},\"returns\":{\"_0\":\"Created Pool Address\"}},\"getCreatedPoolsLengthByToken(address,address)\":{\"params\":{\"_creator\":\"Address of created pool user\",\"_token\":\"Address of token want to query\"},\"returns\":{\"_0\":\"Return number of created pool\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allPoolsLength()\":{\"notice\":\"Get the number of all created pools\"},\"getCreatedPoolsByToken(address,address)\":{\"notice\":\"Get the created pools by token address\"},\"getCreatedPoolsLengthByToken(address,address)\":{\"notice\":\"Retrieve number of pools created for specific token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IDOpool/PoolFactory.sol\":\"PoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"contracts/IDOpool/PoolFactory.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IPool.sol\\\";\\nimport \\\"../utils/Initializable.sol\\\";\\nimport \\\"../utils/AccessControl.sol\\\";\\nimport \\\"../libraries/Clones.sol\\\";\\n\\ncontract PoolFactory is Initializable, AccessControl {\\n\\n    // keccak256(\\\"ADMIN\\\")\\n    bytes32 public constant ADMIN = 0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42;\\n\\n    uint16 public constant PERCENTAGE_DENOMINATOR = 10000;\\n\\n    address public poolImplementationAddress;\\n\\n    struct PoolHashInfo{\\n        address pool;\\n        uint poolHash;\\n    }\\n\\n    // Array of created Pools Address\\n    address[] public allPools;\\n\\n    // Mapping from user to (From token to array of created Pools for token)\\n    mapping(address => mapping(address => address[])) public getCreatedPools;\\n\\n    // Mapping from user to (From poolHash to (From pool index of user to pool address))\\n    mapping(address => mapping(uint => mapping(uint => address))) public registerPools;\\n\\n    // Mapping from user to (From token to array of registered Pools for token)\\n    mapping(address => mapping(address => address[])) public getRegisteredPools;\\n\\n    event PoolRegistered(address registeredBy, address indexed token, address indexed pool);\\n    event PoolCreated(address createdBy, address indexed token, address indexed pool, uint256 poolId);\\n    event UpdatePoolImplementation(address indexed oldPoolImplementation, address indexed newPoolImplementation);\\n    error ZeroAmount();\\n    error ZeroAddress();\\n    error ZeroOfferedRate();\\n    error NotRegisteredPool();\\n    error NotValidGalaxyPoolProportion();\\n    error NotValidEarlyAccessProportion();\\n    error AlreadyAdmin();\\n    error AlreadyNotAdmin();\\n\\n        \\n    function grantAdminRole(address _admin) external onlyRole(ADMIN){\\n        _validAddress(_admin);\\n        if(hasRole(ADMIN, _admin)){\\n            revert AlreadyAdmin();\\n        }\\n        _grantRole(ADMIN, _admin);\\n    }\\n\\n    function revokeAdminRole(address _admin) external onlyRole(ADMIN){\\n        if(!hasRole(ADMIN, _admin)){\\n            revert AlreadyNotAdmin();\\n        }\\n        _revokeRole(ADMIN, _admin);\\n    }\\n\\n    function hasAdminRole(address _admin) external view returns(bool){\\n        return hasRole(ADMIN, _admin);\\n    }\\n\\n\\n    function _validAddress(address _address) internal pure {\\n        if (_address == address(0)) {\\n            revert ZeroAddress();\\n        }\\n    }\\n\\n    function _validAmount(uint _amount) internal pure {\\n        if (_amount == 0) {\\n            revert ZeroAmount();\\n        }\\n    }\\n\\n    function initialize(address _poolImplementationAddress) external initializer {\\n        poolImplementationAddress = _poolImplementationAddress;\\n        _setupRole(ADMIN, _msgSender());\\n    }\\n\\n    function setPoolImplementation(address _poolImplementationAddress) external onlyRole(ADMIN) {\\n        _validAddress(_poolImplementationAddress);\\n        address oldPoolImplementation = poolImplementationAddress;\\n        poolImplementationAddress = _poolImplementationAddress;\\n        emit UpdatePoolImplementation(oldPoolImplementation, _poolImplementationAddress);\\n    }\\n\\n    /**\\n     * @notice Get the number of all created pools\\n     * @return Return number of created pools\\n     */\\n    function allPoolsLength() public view returns (uint256) {\\n        return allPools.length;\\n    }\\n\\n    /**\\n     * @notice Get the created pools by token address\\n     * @dev User can retrieve their created pool by address of tokens\\n     * @param _creator Address of created pool user\\n     * @param _token Address of token want to query\\n     * @return Created Pool Address\\n     */\\n    function getCreatedPoolsByToken(address _creator, address _token) public view returns (address[] memory) {\\n        return getCreatedPools[_creator][_token];\\n    }\\n\\n    function getRegisteredPoolsByToken(address _collaborator, address _token) public view returns (address[] memory) {\\n        return getRegisteredPools[_collaborator][_token];\\n    }\\n\\n    /**\\n     * @notice Retrieve number of pools created for specific token\\n     * @param _creator Address of created pool user\\n     * @param _token Address of token want to query\\n     * @return Return number of created pool\\n     */\\n    function getCreatedPoolsLengthByToken(address _creator, address _token) public view returns (uint256) {\\n        return getCreatedPools[_creator][_token].length;\\n    }\\n\\n    function getRegisteredPoolsLengthByToken(address _collaborator, address _token) public view returns (uint256) {\\n        return getRegisteredPools[_collaborator][_token].length;\\n    }\\n\\n    function registerPoolAddress(address collaborator, address[2] memory addrs, uint[13] memory uints) external onlyRole(ADMIN) returns (address pool) {\\n        (address _IDOToken, uint poolIndex, uint poolHash, bytes32 salt) = _internalRegisterPool(collaborator, addrs, uints);\\n\\n        pool = Clones.predictDeterministicAddress(poolImplementationAddress, salt);\\n\\n        registerPools[collaborator][poolHash][poolIndex] = pool;\\n        getRegisteredPools[collaborator][_IDOToken].push(pool);\\n\\n        emit PoolRegistered(_msgSender(), _IDOToken, pool);\\n    }\\n\\n    function createPool(address[2] memory addrs, uint[13] memory uints) external returns (address pool) {\\n        (address _IDOToken, uint poolIndex, uint poolHash,bytes32 salt) = _internalRegisterPool(_msgSender(), addrs, uints);\\n        if(registerPools[_msgSender()][poolHash][poolIndex] == address(0)){\\n            revert NotRegisteredPool();\\n        }\\n\\n        registerPools[_msgSender()][poolHash][poolIndex] == address(0);\\n\\n        pool = Clones.cloneDeterministic(poolImplementationAddress, salt);\\n\\n        IPool(pool).initialize(addrs, uints);\\n\\n        getCreatedPools[_msgSender()][_IDOToken].push(pool);\\n        allPools.push(pool);\\n\\n        emit PoolCreated(_msgSender(), _IDOToken, pool, allPools.length - 1);\\n    }\\n\\n    function hashPoolInfo(address[2] memory addrs, uint[13] memory uints) public pure returns (uint){\\n        return uint256(keccak256(abi.encode(addrs, uints)));\\n    }\\n\\n    function _verifyPoolInfo(address[2] memory addrs, uint[13] memory uints) internal pure{\\n        // address _IDOToken = addrs[0];\\n        {\\n            address _purchaseToken = addrs[1];\\n            _validAddress(_purchaseToken);\\n        }\\n        {\\n            /*\\n            uint _maxPurchaseAmountForKYCUser = uints[0];\\n            uint _maxPurchaseAmountForNotKYCUser = uints[1];\\n            uint _TGEDate = uints[2];\\n            uint _TGEPercentage = uints[3];\\n            uint _participationFeePercentage = uints[4];\\n            uint _galaxyPoolProportion = uints[5];\\n            uint _earlyAccessProportion = uints[6];\\n            uint _totalRaiseAmount = uints[7];\\n            uint _whaleOpenTime = uints[8];\\n            uint _whaleDuration = uints[9];\\n            uint _communityDuration = uints[10];\\n            uint _rate = uints[11];\\n            uint _decimal = uints[12];\\n            */\\n\\n            uint _galaxyPoolProportion = uints[5];\\n            if(_galaxyPoolProportion > PERCENTAGE_DENOMINATOR){\\n                revert NotValidGalaxyPoolProportion();\\n            }\\n\\n            uint _earlyAccessProportion = uints[6];\\n            if(_earlyAccessProportion > PERCENTAGE_DENOMINATOR){\\n                revert NotValidEarlyAccessProportion();\\n            }\\n\\n            uint _totalRaiseAmount = uints[7];\\n            _validAmount(_totalRaiseAmount);\\n\\n            uint _communityDuration = uints[10];\\n            _validAmount(_communityDuration);\\n        }\\n    }\\n\\n    function _internalRegisterPool(address collaborator, address[2] memory addrs, uint[13] memory uints) internal view returns(address _IDOToken, uint256 poolIndex, uint poolHash, bytes32 salt){\\n        _verifyPoolInfo(addrs, uints);\\n        _IDOToken = addrs[0];\\n\\n        poolIndex = getCreatedPoolsLengthByToken(_msgSender(), _IDOToken);\\n\\n        poolHash = hashPoolInfo(addrs, uints);\\n\\n        salt = keccak256(abi.encodePacked(collaborator, poolHash, poolIndex));\\n    }\\n\\n    uint public testFactory;\\n    function setTestFactory(uint _testFactory) external {\\n        testFactory = _testFactory;\\n    }\\n}\\n\",\"keccak256\":\"0x5ca280f23f3ac21e63e9ec5d0a8fb62b2f4568f79363b076eb61992818ea4f52\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x40b75099b6f15069dcbe4b28537f25ee356645284e8150e6df6b6617a19dd810\",\"license\":\"MIT\"},\"contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1a6706458168fe9558321439a4b2da8d54442f60c7db4bee592b7372abdc995d\",\"license\":\"MIT\"},\"contracts/interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.9;\\n\\ninterface IPool{\\n    function initialize(address[2] memory addresses, uint[13] memory numbers) external;\\n}\",\"keccak256\":\"0x5af59e063df2f88b57c23e012f36f6e427351ba3174ec1a730f2a2e5570274c0\",\"license\":\"UNLICENSED\"},\"contracts/libraries/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/Clones.sol)\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        /// @solidity memory-safe-assembly\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0xf5e4a84eca7203630659f254ca31b9fecde934075c06aacea3dcb4bb5c76d5d3\",\"license\":\"MIT\"},\"contracts/libraries/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xfcdb2365c3dbab7b025e1ae4f236f9fad8eeb7969be8f621c1037bb657143e3d\",\"license\":\"MIT\"},\"contracts/utils/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../libraries/Strings.sol\\\";\\nimport \\\"../utils/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module thatIAccessControl allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\\n     *\\n     * Format of the revert message is described in {_checkRole}.\\n     *\\n     * _Available since v4.6._\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * May emit a {RoleGranted} event.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xcc85f8cb9ea24bb1d925de7e373979e4ff8c5a721b99ebb1b4f78654cc9417cc\",\"license\":\"MIT\"},\"contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity 0.8.9;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x0f0d5a5f51b5d364f990d457e605bcba340f9a7c1ae3dae99cd5c646b81483b4\",\"license\":\"MIT\"},\"contracts/utils/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity 0.8.9;\\n\\nimport \\\"../interfaces/IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x2d1ce8177db60596370e3b22ce20252121223b76ca60bd9133537c81351cf290\",\"license\":\"MIT\"},\"contracts/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity 0.8.9;\\n\\n// import \\\"./Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\\n * reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in\\n * case an upgrade adds a module that needs to be initialized.\\n *\\n * For example:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * contract MyToken is ERC20Upgradeable {\\n *     function initialize() initializer public {\\n *         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");\\n *     }\\n * }\\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\\n *     function initializeV2() reinitializer(2) public {\\n *         __ERC20Permit_init(\\\"MyToken\\\");\\n *     }\\n * }\\n * ```\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() {\\n *     _disableInitializers();\\n * }\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     * @custom:oz-retyped-from bool\\n     */\\n    uint8 private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Triggered when the contract has been initialized or reinitialized.\\n     */\\n    event Initialized(uint8 version);\\n\\n    /**\\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\\n     */\\n    modifier initializer() {\\n        bool isTopLevelCall = !_initializing;\\n        require(\\n            // (isTopLevelCall && _initialized < 1) || (!Address.isContract(address(this)) && _initialized == 1),\\n            (isTopLevelCall && _initialized < 1) || (!(address(this).code.length > 0) && _initialized == 1),\\n            \\\"Initializable: contract is already initialized\\\"\\n        );\\n        _initialized = 1;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n        }\\n        _;\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n            emit Initialized(1);\\n        }\\n    }\\n\\n    /**\\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\\n     * used to initialize parent contracts.\\n     *\\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\\n     * initialization.\\n     *\\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\\n     * a contract, executing them in the right order is up to the developer or operator.\\n     */\\n    modifier reinitializer(uint8 version) {\\n        require(!_initializing && _initialized < version, \\\"Initializable: contract is already initialized\\\");\\n        _initialized = version;\\n        _initializing = true;\\n        _;\\n        _initializing = false;\\n        emit Initialized(version);\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\\n     * through proxies.\\n     */\\n    function _disableInitializers() internal virtual {\\n        require(!_initializing, \\\"Initializable: contract is initializing\\\");\\n        if (_initialized < type(uint8).max) {\\n            _initialized = type(uint8).max;\\n            emit Initialized(type(uint8).max);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x1c10d4a1223c93a7153eb6fb1aae8edaad8aea7da5f2e04d1a2adccad4bdecd1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061177f806100206000396000f3fe608060405234801561001057600080fd5b506004361061018f5760003560e01c80639a19c7b0116100e4578063c395fcb311610092578063c395fcb31461039b578063c4d66de8146103ae578063c634b78e146103c1578063d547741f146103d4578063d6f74898146103e7578063e1825d3f146103fa578063efde4e6414610433578063fae5400e1461043b57600080fd5b80639a19c7b01461030b5780639ad172231461031e5780639ff96d2114610331578063a217fddf14610351578063ae7a774b14610359578063b3cd42541461036c578063c0f40eb31461038857600080fd5b8063343fb63a11610141578063343fb63a1461025f57806336568abe1461027257806341d1de97146102855780636fcb0b40146102985780637fd37609146102d257806391d14854146102e5578063983bf2bf146102f857600080fd5b806301ffc9a71461019457806315ef4ddc146101bc5780631b1dc5ee146101e7578063248a9ca3146101fa5780632a0acc6a1461022c5780632eb9110c146102415780632f2ff15d1461024a575b600080fd5b6101a76101a2366004611255565b61044e565b60405190151581526020015b60405180910390f35b6002546101cf906001600160a01b031681565b6040516001600160a01b0390911681526020016101b3565b6101cf6101f53660046113a7565b610485565b61021e6102083660046113dd565b6000908152600160208190526040909120015490565b6040519081526020016101b3565b61021e60008051602061172a83398151915281565b61021e60075481565b61025d6102583660046113f6565b61067b565b005b6101cf61026d366004611419565b6106a6565b61025d6102803660046113f6565b6106eb565b6101cf6102933660046113dd565b61076e565b6101cf6102a6366004611455565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61021e6102e0366004611488565b610798565b6101a76102f33660046113f6565b6107c3565b6101cf6103063660046114b2565b6107ee565b61025d6103193660046114f8565b6108fd565b61021e61032c3660046113a7565b610962565b61034461033f366004611488565b610996565b6040516101b39190611513565b61021e600081565b610344610367366004611488565b610a19565b61037561271081565b60405161ffff90911681526020016101b3565b6101cf610396366004611419565b610a9a565b6101a76103a93660046114f8565b610ac2565b61025d6103bc3660046114f8565b610adc565b61025d6103cf3660046114f8565b610c18565b61025d6103e23660046113f6565b610c87565b61025d6103f53660046114f8565b610cad565b61021e610408366004611488565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60035461021e565b61025d6104493660046113dd565b600755565b60006001600160e01b03198216637965db0b60e01b148061047f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080808080610496338888610d21565b3360009081526005602090815260408083208584528252808320868452909152902054939750919550935091506001600160a01b03166104e957604051634318e2a160e01b815260040160405180910390fd5b33600090815260056020908152604080832085845282528220918590525260025461051d906001600160a01b031682610d9c565b604051630b24ed3760e11b81529095506001600160a01b03861690631649da6e9061054e908a908a90600401611560565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b505050506004600061058b3390565b6001600160a01b039081168252602080830193909352604091820160009081208883168083529085529281208054600181810183559183529482209094018054928a166001600160a01b031993841681179091556003805495860181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9093018054909116831790557febbbe9dc3a19d2f959ac76ac0372b4983cdfb945f5d6aef4873c36fabb2ba8aa6106403390565b60035461064f906001906115dc565b604080516001600160a01b03909316835260208301919091520160405180910390a35050505092915050565b6000828152600160208190526040909120015461069781610e36565b6106a18383610e43565b505050565b600460205282600052604060002060205281600052604060002081815481106106ce57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6001600160a01b03811633146107605760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61076a8282610eae565b5050565b6003818154811061077e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600060008051602061172a83398151915261080881610e36565b600080600080610819898989610d21565b60025493975091955093509150610839906001600160a01b031682610f15565b6001600160a01b03808b1660008181526005602090815260408083208884528252808320898452825280832080548688166001600160a01b0319918216811790925594845260068352818420958b1680855295835290832080546001810182559084529190922001805490921681179091559197507f61afef2e121f71511fab2583c5ac49a5dc1d7a8ad8ad91c44c8465f073a73ac46108d63390565b6040516001600160a01b03909116815260200160405180910390a350505050509392505050565b60008051602061172a83398151915261091581610e36565b61092d60008051602061172a833981519152836107c3565b61094a5760405163e901e0f560e01b815260040160405180910390fd5b61076a60008051602061172a83398151915283610eae565b60008282604051602001610977929190611560565b60408051601f1981840301815291905280516020909101209392505050565b6001600160a01b038083166000908152600660209081526040808320938516835292815290829020805483518184028101840190945280845260609392830182828015610a0c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109ee575b5050505050905092915050565b6001600160a01b038083166000908152600460209081526040808320938516835292815290829020805483518184028101840190945280845260609392830182828015610a0c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109ee575050505050905092915050565b600660205282600052604060002060205281600052604060002081815481106106ce57600080fd5b600061047f60008051602061172a833981519152836107c3565b600054610100900460ff1615808015610afc5750600054600160ff909116105b80610b165750303b158015610b16575060005460ff166001145b610b795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610757565b6000805460ff191660011790558015610b9c576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b038416179055610bcf60008051602061172a83398151915233610f82565b801561076a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60008051602061172a833981519152610c3081610e36565b610c3982610f8c565b610c5160008051602061172a833981519152836107c3565b15610c6f57604051631c3681a560e11b815260040160405180910390fd5b61076a60008051602061172a83398151915283610e43565b60008281526001602081905260409091200154610ca381610e36565b6106a18383610eae565b60008051602061172a833981519152610cc581610e36565b610cce82610f8c565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa90600090a3505050565b600080600080610d318686610fb3565b85519350610d3f3385610798565b9250610d4b8686610962565b6040516bffffffffffffffffffffffff1960608a901b166020820152603481018290526054810185905290925060740160405160208183030381529060405280519060200120905093509350935093565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661047f5760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b6044820152606401610757565b610e408133611037565b50565b610e4d82826107c3565b61076a5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610eb882826107c3565b1561076a5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610f7b838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b61076a8282610e43565b6001600160a01b038116610e405760405163d92e233d60e01b815260040160405180910390fd5b6020820151610fc181610f8c565b5060a0810151612710811115610fea5760405163f8967ebd60e01b815260040160405180910390fd5b60c0820151612710811115611012576040516343edeabb60e11b815260040160405180910390fd5b60e08301516110208161109b565b61014084015161102f8161109b565b505050505050565b61104182826107c3565b61076a57611059816001600160a01b031660146110b9565b6110648360206110b9565b604051602001611075929190611639565b60408051601f198184030181529082905262461bcd60e51b8252610757916004016116a8565b80610e4057604051631f2a200560e01b815260040160405180910390fd5b606060006110c88360026116db565b6110d39060026116fa565b67ffffffffffffffff8111156110eb576110eb61127f565b6040519080825280601f01601f191660200182016040528015611115576020820181803683370190505b509050600360fc1b81600081518110611130576111306115f3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061115f5761115f6115f3565b60200101906001600160f81b031916908160001a90535060006111838460026116db565b61118e9060016116fa565b90505b6001811115611206576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111c2576111c26115f3565b1a60f81b8282815181106111d8576111d86115f3565b60200101906001600160f81b031916908160001a90535060049490941c936111ff81611712565b9050611191565b508315610f7b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610757565b60006020828403121561126757600080fd5b81356001600160e01b031981168114610f7b57600080fd5b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146112ac57600080fd5b919050565b600082601f8301126112c257600080fd5b6040516040810181811067ffffffffffffffff821117156112f357634e487b7160e01b600052604160045260246000fd5b806040525080604084018581111561130a57600080fd5b845b8181101561132b5761131d81611295565b83526020928301920161130c565b509195945050505050565b600082601f83011261134757600080fd5b6040516101a080820182811067ffffffffffffffff8211171561137a57634e487b7160e01b600052604160045260246000fd5b6040528301818582111561138d57600080fd5b845b8281101561132b57803582526020918201910161138f565b6000806101e083850312156113bb57600080fd5b6113c584846112b1565b91506113d48460408501611336565b90509250929050565b6000602082840312156113ef57600080fd5b5035919050565b6000806040838503121561140957600080fd5b823591506113d460208401611295565b60008060006060848603121561142e57600080fd5b61143784611295565b925061144560208501611295565b9150604084013590509250925092565b60008060006060848603121561146a57600080fd5b61147384611295565b95602085013595506040909401359392505050565b6000806040838503121561149b57600080fd5b6114a483611295565b91506113d460208401611295565b600080600061020084860312156114c857600080fd5b6114d184611295565b92506114e085602086016112b1565b91506114ef8560608601611336565b90509250925092565b60006020828403121561150a57600080fd5b610f7b82611295565b6020808252825182820181905260009190848201906040850190845b818110156115545783516001600160a01b03168352928401929184019160010161152f565b50909695505050505050565b6101e08101818460005b60028110156115925781516001600160a01b031683526020928301929091019060010161156a565b505050604082018360005b600d8110156115bc57815183526020928301929091019060010161159d565b5050509392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115ee576115ee6115c6565b500390565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561162457818101518382015260200161160c565b83811115611633576000848401525b50505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161166b816017850160208801611609565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161169c816028840160208801611609565b01602801949350505050565b60208152600082518060208401526116c7816040850160208701611609565b601f01601f19169190910160400192915050565b60008160001904831182151516156116f5576116f56115c6565b500290565b6000821982111561170d5761170d6115c6565b500190565b600081611721576117216115c6565b50600019019056fedf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42a2646970667358221220f1c8d5ae47699e883f3ed0d416de9d98f9c7ccd3905ae80019d15b4984e5bde464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018f5760003560e01c80639a19c7b0116100e4578063c395fcb311610092578063c395fcb31461039b578063c4d66de8146103ae578063c634b78e146103c1578063d547741f146103d4578063d6f74898146103e7578063e1825d3f146103fa578063efde4e6414610433578063fae5400e1461043b57600080fd5b80639a19c7b01461030b5780639ad172231461031e5780639ff96d2114610331578063a217fddf14610351578063ae7a774b14610359578063b3cd42541461036c578063c0f40eb31461038857600080fd5b8063343fb63a11610141578063343fb63a1461025f57806336568abe1461027257806341d1de97146102855780636fcb0b40146102985780637fd37609146102d257806391d14854146102e5578063983bf2bf146102f857600080fd5b806301ffc9a71461019457806315ef4ddc146101bc5780631b1dc5ee146101e7578063248a9ca3146101fa5780632a0acc6a1461022c5780632eb9110c146102415780632f2ff15d1461024a575b600080fd5b6101a76101a2366004611255565b61044e565b60405190151581526020015b60405180910390f35b6002546101cf906001600160a01b031681565b6040516001600160a01b0390911681526020016101b3565b6101cf6101f53660046113a7565b610485565b61021e6102083660046113dd565b6000908152600160208190526040909120015490565b6040519081526020016101b3565b61021e60008051602061172a83398151915281565b61021e60075481565b61025d6102583660046113f6565b61067b565b005b6101cf61026d366004611419565b6106a6565b61025d6102803660046113f6565b6106eb565b6101cf6102933660046113dd565b61076e565b6101cf6102a6366004611455565b60056020908152600093845260408085208252928452828420905282529020546001600160a01b031681565b61021e6102e0366004611488565b610798565b6101a76102f33660046113f6565b6107c3565b6101cf6103063660046114b2565b6107ee565b61025d6103193660046114f8565b6108fd565b61021e61032c3660046113a7565b610962565b61034461033f366004611488565b610996565b6040516101b39190611513565b61021e600081565b610344610367366004611488565b610a19565b61037561271081565b60405161ffff90911681526020016101b3565b6101cf610396366004611419565b610a9a565b6101a76103a93660046114f8565b610ac2565b61025d6103bc3660046114f8565b610adc565b61025d6103cf3660046114f8565b610c18565b61025d6103e23660046113f6565b610c87565b61025d6103f53660046114f8565b610cad565b61021e610408366004611488565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205490565b60035461021e565b61025d6104493660046113dd565b600755565b60006001600160e01b03198216637965db0b60e01b148061047f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080808080610496338888610d21565b3360009081526005602090815260408083208584528252808320868452909152902054939750919550935091506001600160a01b03166104e957604051634318e2a160e01b815260040160405180910390fd5b33600090815260056020908152604080832085845282528220918590525260025461051d906001600160a01b031682610d9c565b604051630b24ed3760e11b81529095506001600160a01b03861690631649da6e9061054e908a908a90600401611560565b600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b505050506004600061058b3390565b6001600160a01b039081168252602080830193909352604091820160009081208883168083529085529281208054600181810183559183529482209094018054928a166001600160a01b031993841681179091556003805495860181559091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9093018054909116831790557febbbe9dc3a19d2f959ac76ac0372b4983cdfb945f5d6aef4873c36fabb2ba8aa6106403390565b60035461064f906001906115dc565b604080516001600160a01b03909316835260208301919091520160405180910390a35050505092915050565b6000828152600160208190526040909120015461069781610e36565b6106a18383610e43565b505050565b600460205282600052604060002060205281600052604060002081815481106106ce57600080fd5b6000918252602090912001546001600160a01b0316925083915050565b6001600160a01b03811633146107605760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61076a8282610eae565b5050565b6003818154811061077e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600060008051602061172a83398151915261080881610e36565b600080600080610819898989610d21565b60025493975091955093509150610839906001600160a01b031682610f15565b6001600160a01b03808b1660008181526005602090815260408083208884528252808320898452825280832080548688166001600160a01b0319918216811790925594845260068352818420958b1680855295835290832080546001810182559084529190922001805490921681179091559197507f61afef2e121f71511fab2583c5ac49a5dc1d7a8ad8ad91c44c8465f073a73ac46108d63390565b6040516001600160a01b03909116815260200160405180910390a350505050509392505050565b60008051602061172a83398151915261091581610e36565b61092d60008051602061172a833981519152836107c3565b61094a5760405163e901e0f560e01b815260040160405180910390fd5b61076a60008051602061172a83398151915283610eae565b60008282604051602001610977929190611560565b60408051601f1981840301815291905280516020909101209392505050565b6001600160a01b038083166000908152600660209081526040808320938516835292815290829020805483518184028101840190945280845260609392830182828015610a0c57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116109ee575b5050505050905092915050565b6001600160a01b038083166000908152600460209081526040808320938516835292815290829020805483518184028101840190945280845260609392830182828015610a0c576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116109ee575050505050905092915050565b600660205282600052604060002060205281600052604060002081815481106106ce57600080fd5b600061047f60008051602061172a833981519152836107c3565b600054610100900460ff1615808015610afc5750600054600160ff909116105b80610b165750303b158015610b16575060005460ff166001145b610b795760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610757565b6000805460ff191660011790558015610b9c576000805461ff0019166101001790555b600280546001600160a01b0319166001600160a01b038416179055610bcf60008051602061172a83398151915233610f82565b801561076a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b60008051602061172a833981519152610c3081610e36565b610c3982610f8c565b610c5160008051602061172a833981519152836107c3565b15610c6f57604051631c3681a560e11b815260040160405180910390fd5b61076a60008051602061172a83398151915283610e43565b60008281526001602081905260409091200154610ca381610e36565b6106a18383610eae565b60008051602061172a833981519152610cc581610e36565b610cce82610f8c565b600280546001600160a01b038481166001600160a01b0319831681179093556040519116919082907f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa90600090a3505050565b600080600080610d318686610fb3565b85519350610d3f3385610798565b9250610d4b8686610962565b6040516bffffffffffffffffffffffff1960608a901b166020820152603481018290526054810185905290925060740160405160208183030381529060405280519060200120905093509350935093565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528360601b60148201526e5af43d82803e903d91602b57fd5bf360881b6028820152826037826000f59150506001600160a01b03811661047f5760405162461bcd60e51b8152602060048201526017602482015276115490cc4c4d8dce8818dc99585d194c8819985a5b1959604a1b6044820152606401610757565b610e408133611037565b50565b610e4d82826107c3565b61076a5760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b610eb882826107c3565b1561076a5760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610f7b838330604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8152606093841b60148201526f5af43d82803e903d91602b57fd5bf3ff60801b6028820152921b6038830152604c8201526037808220606c830152605591012090565b9392505050565b61076a8282610e43565b6001600160a01b038116610e405760405163d92e233d60e01b815260040160405180910390fd5b6020820151610fc181610f8c565b5060a0810151612710811115610fea5760405163f8967ebd60e01b815260040160405180910390fd5b60c0820151612710811115611012576040516343edeabb60e11b815260040160405180910390fd5b60e08301516110208161109b565b61014084015161102f8161109b565b505050505050565b61104182826107c3565b61076a57611059816001600160a01b031660146110b9565b6110648360206110b9565b604051602001611075929190611639565b60408051601f198184030181529082905262461bcd60e51b8252610757916004016116a8565b80610e4057604051631f2a200560e01b815260040160405180910390fd5b606060006110c88360026116db565b6110d39060026116fa565b67ffffffffffffffff8111156110eb576110eb61127f565b6040519080825280601f01601f191660200182016040528015611115576020820181803683370190505b509050600360fc1b81600081518110611130576111306115f3565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061115f5761115f6115f3565b60200101906001600160f81b031916908160001a90535060006111838460026116db565b61118e9060016116fa565b90505b6001811115611206576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111c2576111c26115f3565b1a60f81b8282815181106111d8576111d86115f3565b60200101906001600160f81b031916908160001a90535060049490941c936111ff81611712565b9050611191565b508315610f7b5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610757565b60006020828403121561126757600080fd5b81356001600160e01b031981168114610f7b57600080fd5b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b03811681146112ac57600080fd5b919050565b600082601f8301126112c257600080fd5b6040516040810181811067ffffffffffffffff821117156112f357634e487b7160e01b600052604160045260246000fd5b806040525080604084018581111561130a57600080fd5b845b8181101561132b5761131d81611295565b83526020928301920161130c565b509195945050505050565b600082601f83011261134757600080fd5b6040516101a080820182811067ffffffffffffffff8211171561137a57634e487b7160e01b600052604160045260246000fd5b6040528301818582111561138d57600080fd5b845b8281101561132b57803582526020918201910161138f565b6000806101e083850312156113bb57600080fd5b6113c584846112b1565b91506113d48460408501611336565b90509250929050565b6000602082840312156113ef57600080fd5b5035919050565b6000806040838503121561140957600080fd5b823591506113d460208401611295565b60008060006060848603121561142e57600080fd5b61143784611295565b925061144560208501611295565b9150604084013590509250925092565b60008060006060848603121561146a57600080fd5b61147384611295565b95602085013595506040909401359392505050565b6000806040838503121561149b57600080fd5b6114a483611295565b91506113d460208401611295565b600080600061020084860312156114c857600080fd5b6114d184611295565b92506114e085602086016112b1565b91506114ef8560608601611336565b90509250925092565b60006020828403121561150a57600080fd5b610f7b82611295565b6020808252825182820181905260009190848201906040850190845b818110156115545783516001600160a01b03168352928401929184019160010161152f565b50909695505050505050565b6101e08101818460005b60028110156115925781516001600160a01b031683526020928301929091019060010161156a565b505050604082018360005b600d8110156115bc57815183526020928301929091019060010161159d565b5050509392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156115ee576115ee6115c6565b500390565b634e487b7160e01b600052603260045260246000fd5b60005b8381101561162457818101518382015260200161160c565b83811115611633576000848401525b50505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b81526000835161166b816017850160208801611609565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161169c816028840160208801611609565b01602801949350505050565b60208152600082518060208401526116c7816040850160208701611609565b601f01601f19169190910160400192915050565b60008160001904831182151516156116f5576116f56115c6565b500290565b6000821982111561170d5761170d6115c6565b500190565b600081611721576117216115c6565b50600019019056fedf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42a2646970667358221220f1c8d5ae47699e883f3ed0d416de9d98f9c7ccd3905ae80019d15b4984e5bde464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allPoolsLength()": {
        "returns": {
          "_0": "Return number of created pools"
        }
      },
      "getCreatedPoolsByToken(address,address)": {
        "details": "User can retrieve their created pool by address of tokens",
        "params": {
          "_creator": "Address of created pool user",
          "_token": "Address of token want to query"
        },
        "returns": {
          "_0": "Created Pool Address"
        }
      },
      "getCreatedPoolsLengthByToken(address,address)": {
        "params": {
          "_creator": "Address of created pool user",
          "_token": "Address of token want to query"
        },
        "returns": {
          "_0": "Return number of created pool"
        }
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allPoolsLength()": {
        "notice": "Get the number of all created pools"
      },
      "getCreatedPoolsByToken(address,address)": {
        "notice": "Get the created pools by token address"
      },
      "getCreatedPoolsLengthByToken(address,address)": {
        "notice": "Retrieve number of pools created for specific token"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8666,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 8669,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 8319,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "_roles",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(RoleData)8314_storage)"
      },
      {
        "astId": 4087,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "poolImplementationAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 4095,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "allPools",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 4102,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "getCreatedPools",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))"
      },
      {
        "astId": 4110,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "registerPools",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))"
      },
      {
        "astId": 4117,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "getRegisteredPools",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))"
      },
      {
        "astId": 4705,
        "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
        "label": "testFactory",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_array(t_address)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => address[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_array(t_address)dyn_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_uint256,t_address)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(uint256 => address)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_uint256,t_address))"
      },
      "t_mapping(t_bytes32,t_struct(RoleData)8314_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AccessControl.RoleData)",
        "numberOfBytes": "32",
        "value": "t_struct(RoleData)8314_storage"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_mapping(t_uint256,t_address))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(uint256 => address))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_address)"
      },
      "t_struct(RoleData)8314_storage": {
        "encoding": "inplace",
        "label": "struct AccessControl.RoleData",
        "members": [
          {
            "astId": 8311,
            "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
            "label": "members",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 8313,
            "contract": "contracts/IDOpool/PoolFactory.sol:PoolFactory",
            "label": "adminRole",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}